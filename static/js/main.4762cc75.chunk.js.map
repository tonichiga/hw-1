{"version":3,"sources":["components/Profile/profile.module.scss","components/FriendList/friend-list.module.scss","components/Percentage/percent-element.module.scss","components/Statistics/statistic.module.scss","components/Profile/index.jsx","components/Percentage/index.jsx","components/Statistics/index.jsx","components/FriendList/components/FriendList.jsx","components/FriendList/FriendListComponent.jsx","components/Transaction/components/TransactionElementComponent.jsx","components/Transaction/components/TransactionElement.jsx","components/Transaction/Transaction.jsx","App.js","index.js"],"names":["module","exports","Profile","props","className","s","profile","description","src","avatar","alt","name","tag","location","stats","statsElement","label","quantity","followers","views","likes","PercentageElement","stat","map","id","percentage","percElement","style","backgroundColor","Math","random","percLabel","percItem","Statistics","title","statData","statisticsWrapper","statisticsTitle","statisticsList","Percentage","Friend","data","isOnline","friendElement","friendTitle","friendImg","friendStatus","width","height","borderRadius","FriendsList","friendSection","frienList","TransactionElementComponent","type","amount","currency","TransactionElement","el","Transaction","App","user","statistic","friends","transactions","propTypes","PropTypes","string","number","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.4762cc75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3pj0w\",\"avatar\":\"profile_avatar__29QFN\",\"stats\":\"profile_stats__KIZTn\",\"name\":\"profile_name__1Qohl\",\"tag\":\"profile_tag__3vlOS\",\"location\":\"profile_location__rEgmd\",\"label\":\"profile_label__3y8VJ\",\"quantity\":\"profile_quantity__2-Ybo\",\"statsElement\":\"profile_statsElement__1A60r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendSection\":\"friend-list_friendSection__2J-CS\",\"frienList\":\"friend-list_frienList__33gdk\",\"friendElement\":\"friend-list_friendElement__27Ma6\",\"friendImg\":\"friend-list_friendImg__2HC38\",\"friendStatus\":\"friend-list_friendStatus__2h-hO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"percElement\":\"percent-element_percElement__1_yWH\",\"percLabel\":\"percent-element_percLabel__2h1R3\",\"percItem\":\"percent-element_percItem__3DcVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsWrapper\":\"statistic_statisticsWrapper__QaaB8\",\"statisticsList\":\"statistic_statisticsList__GGzLC\",\"statisticsTitle\":\"statistic_statisticsTitle__2cOFh\",\"percElement\":\"statistic_percElement__vpOVc\"};","import React from 'react';\r\nimport s from './profile.module.scss';\r\n\r\nconst Profile = props => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={props.avatar} alt=\"\" className={s.avatar} />\r\n        <p className={s.name}>{props.name}</p>\r\n        <p className={s.tag}>@{props.tag}</p>\r\n        <p className={s.location}>{props.location}</p>\r\n      </div>\r\n      <ul className={s.stats}>\r\n        <li className={s.statsElement}>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{props.followers}</span>\r\n        </li>\r\n        <li className={s.statsElement}>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{props.views}</span>\r\n        </li>\r\n        <li className={s.statsElement}>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{props.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport s from './percent-element.module.scss';\r\n\r\nconst getRgbColor = () =>\r\n  `rgb( ${Math.random() * 255}, ${Math.random() * 250}, ${\r\n    Math.random() * 250\r\n  })`;\r\n\r\nconst PercentageElement = ({ stat }) =>\r\n  stat.map(({ id, label, percentage }) => {\r\n    return (\r\n      <li\r\n        className={s.percElement}\r\n        key={id}\r\n        style={{\r\n          backgroundColor: getRgbColor(),\r\n        }}\r\n      >\r\n        <span className={s.percLabel}>{label}</span>\r\n        <span className={s.percItem}>{percentage}%</span>\r\n      </li>\r\n    );\r\n  });\r\nexport default PercentageElement;\r\n","import React from 'react';\r\nimport PercentageElement from '../Percentage/index';\r\nimport s from './statistic.module.scss';\r\n\r\nconst Statistics = ({ title, statData }) => {\r\n  return (\r\n    <section className={s.statisticsWrapper}>\r\n      <h2 className={s.statisticsTitle}>{title}</h2>\r\n      <ul className={s.statisticsList}>\r\n        <PercentageElement stat={statData} />\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\nexport default Statistics;\r\n","import style from '../friend-list.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Friend = ({ data }) =>\r\n  data.map(({ avatar, name, isOnline, id }) => {\r\n    return (\r\n      <li className={style.friendElement} key={id}>\r\n        <h2 className={style.friendTitle}>{name}</h2>\r\n        <img className={style.friendImg} src={avatar} alt=\"\" />\r\n        <span\r\n          className={style.friendStatus}\r\n          style={\r\n            isOnline\r\n              ? {\r\n                  backgroundColor: `rgb(0, 230, 0)`,\r\n                  width: '20px',\r\n                  height: '20px',\r\n                  borderRadius: '50%',\r\n                }\r\n              : {\r\n                  backgroundColor: `rgb(220, 0, 0)`,\r\n                  width: '20px',\r\n                  height: '20px',\r\n                  borderRadius: '50%',\r\n                }\r\n          }\r\n        ></span>\r\n      </li>\r\n    );\r\n  });\r\nexport default Friend;\r\n\r\nFriend.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string,\r\n      name: PropTypes.string,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import React from 'react';\r\nimport Friend from './components/FriendList';\r\nimport s from './friend-list.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendsList = ({ data }) => (\r\n  <section className={s.friendSection}>\r\n    <ul className={s.frienList}>\r\n      <Friend data={data} />\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nexport default FriendsList;\r\n","import React from 'react';\r\n\r\nconst TransactionElementComponent = ({ type, amount, currency, id }) => {\r\n  return (\r\n    <tr key={id}>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TransactionElementComponent;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TransactionElementComponent from './TransactionElementComponent.jsx';\r\n\r\nconst TransactionElement = ({ data }) => {\r\n  return (\r\n    <>\r\n      {data.map(el => (\r\n        <TransactionElementComponent\r\n          key={el.id}\r\n          type={el.type}\r\n          amount={el.amount}\r\n          currency={el.currency}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default TransactionElement;\r\n\r\nTransactionElement.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n","import React from 'react';\r\nimport TransactionElement from './components/TransactionElement';\r\nimport s from './table.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Transaction = ({ amount, currency, type, data }) => (\r\n  <table className=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>{type}</th>\r\n        <th>{amount}</th>\r\n        <th>{currency}</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <TransactionElement data={data} />\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default Transaction;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Profile from './components/Profile/index';\r\nimport Statistics from './components/Statistics';\r\nimport FriendsList from './components/FriendList/FriendListComponent';\r\nimport Transaction from './components/Transaction/Transaction';\r\n\r\nimport user from './data/user.json';\r\nimport transactions from './data/transactions.json';\r\nimport friends from './data/friends-list.json';\r\nimport statistic from './data/statistical-data.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        followers={user.stats.followers}\r\n        views={user.stats.views}\r\n        likes={user.stats.likes}\r\n      />\r\n\r\n      <Statistics title=\"Uploads data\" statData={statistic} />\r\n      <FriendsList data={friends} />\r\n\r\n      <Transaction\r\n        type={'type'}\r\n        amount={'amount'}\r\n        currency={'currency'}\r\n        data={transactions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nTransaction.propTypes = {\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  followers: PropTypes.number,\r\n  views: PropTypes.number,\r\n  likes: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nimport App from \"./App\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}